#pragma once

#include <fstream>
#include <iostream>
#include <vector>

#include "Level.h"

std::vector<Level> initLevels() {
	std::vector<Level> allLevels;

	/*
	Working Chars
	 üö™  ü•∞ ü•¥ ü§¢ ü§Æ  üòà üëø üíÄ üëΩ üëª ü§ñ ü¶Ç üç™ üç© üç≠ üç¶ üçî üåü

	*/
	// add levels here

	allLevels.push_back(Level(
		std::vector<std::u32string> {
			U"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà",
			U"‚ñà‚ñà                                             ‚ñà‚ñà",
			U"‚ñà‚ñà                                             ‚ñà‚ñà",
			U"‚ñà‚ñà                                             ‚ñà‚ñà",
			U"‚ñà‚ñà                                             ‚ñà‚ñà",
			U"‚ñà‚ñà                                             ‚ñà‚ñà",
			U"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà                ‚ñà‚ñà",
			U"‚ñà‚ñà                                             ‚ñà‚ñà",
			U"‚ñà‚ñà                                             ‚ñà‚ñà",
			U"‚ñà‚ñà                                             ‚ñà‚ñà",
			U"‚ñà‚ñà                                             ‚ñà‚ñà",
			U"‚ñà‚ñà                                             ‚ñà‚ñà",
			U"‚ñà‚ñà                                             ‚ñà‚ñà",
			U"‚ñà‚ñà                                             ‚ñà‚ñà",
			U"‚ñà‚ñà                                             ‚ñà‚ñà",
			U"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà" },
		std::make_pair(4, 2), std::make_pair(4, 8),
		std::vector<Enemy*> { new Enemy(0, U'üòà', 40, 3, 5, 1),
							  new Enemy(1, U'üíÄ', 10, 10, 5, 1),
							  new Enemy(2, U'üëª', 30, 12, 5, 1) }));

	allLevels.push_back(Level(
		std::vector<std::u32string> {
			U"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà",
			U"‚ñà‚ñà           ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà",
			U"‚ñà‚ñà                                 ‚ñà‚ñà",
			U"‚ñà‚ñà           ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà              ‚ñà‚ñà",
			U"‚ñà‚ñà           ‚ñà‚ñà    ‚ñà‚ñà              ‚ñà‚ñà",
			U"‚ñà‚ñà           ‚ñà‚ñà    ‚ñà‚ñà              ‚ñà‚ñà",
			U"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà     X        ‚ñà‚ñà",
			U"‚ñà‚ñà   ‚óé       ‚ñà‚ñà    ‚ñà‚ñà              ‚ñà‚ñà",
			U"‚ñà‚ñà           ‚ñà‚ñà    ‚ñà‚ñà              ‚ñà‚ñà",
			U"‚ñà‚ñà           ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà              ‚ñà‚ñà",
			U"‚ñà‚ñà                                 ‚ñà‚ñà",
			U"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà" },
		std::make_pair(4, 2), std::make_pair(4, 8),
		std::vector<Enemy*> { new Enemy(0, U'üòà', 7, 6, 5, 1),
							  new Enemy(1, U'üíÄ', 3, 5, 5, 1),
							  new Enemy(2, U'üëª', 10, 12, 5, 1) }));

	allLevels.push_back(Level(
		std::vector<std::u32string> {
			U"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà",
			U"‚ñà‚ñà           ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà",
			U"‚ñà‚ñà                                 ‚ñà‚ñà",
			U"‚ñà‚ñà           ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà              ‚ñà‚ñà",
			U"‚ñà‚ñà           ‚ñà‚ñà    ‚ñà‚ñà              ‚ñà‚ñà",
			U"‚ñà‚ñà           ‚ñà‚ñà    ‚ñà‚ñà W            ‚ñà‚ñà",
			U"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà              ‚ñà‚ñà",
			U"‚ñà‚ñà   ‚óé       ‚ñà‚ñà    ‚ñà‚ñà              ‚ñà‚ñà",
			U"‚ñà‚ñà           ‚ñà‚ñà    ‚ñà‚ñà              ‚ñà‚ñà",
			U"‚ñà‚ñà           ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà              ‚ñà‚ñà",
			U"‚ñà‚ñà                                 ‚ñà‚ñà",
			U"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà" },
		std::make_pair(4, 2), std::make_pair(4, 8),
		std::vector<Enemy*> { new Enemy(0, U'üòà', 10, 20, 5, 1),
							  new Enemy(1, U'üíÄ', 10, 6, 5, 1),
							  new Enemy(2, U'üëª', 10, 30, 5, 1) }));

	return allLevels;
}
